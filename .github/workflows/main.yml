name: Publish Notion website to GitHub Pages

on:
  # Manual update only.
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout loconotion
        uses: actions/checkout@v3
        with:
          repository: leoncvlt/loconotion
          path: loconotion
          
      - name: Checkout this repo
        uses: actions/checkout@v2
        with:
          path: pages_repo

      - name: Build Loconotion docker image
        run: docker-compose build loconotion
        working-directory: loconotion
        
      - name: Run Loconotion
        run: |
          docker run \
          -v "$GITHUB_WORKSPACE/pages_repo/dist_root:/app/loconotion/dist" \
          -v "$GITHUB_WORKSPACE/pages_repo/site.toml:/app/loconotion/site.toml" \
          loconotion "site.toml"
        working-directory: loconotion
      
      # The reason we have to copy dist_root -> dist is because the first was created
      # within the Docker container, so it's owned by root. Thus, the folder vitae
      # can't be copied into it. After copying it, the new folder is owned by the 
      # github runner.
      # The idea is to have a static page with the Resume (with a specific format 
      # that can't be created in Notion) so here we will copy that page to the
      # folder and replace the $RESUME_SECTION reference to point to this (using iFrame)
      - name: copy folder with resume page and point to it in about page
        run: |
          echo "Before..."
          ls
          cp -r dist_root dist
          echo "After..."
          find .
          cp -r ./vitae/ ./dist/site/vitae
          sed -i 's,$RESUME_SECTION,'"$IFRAME"',' ./dist/site/about.html
        env:
          IFRAME: '<iframe src="./vitae/vitae.html" style="border:none;height:1500px;width:800px;" title="Iframe Vitae"></iframe>'
        working-directory: pages_repo
        
        
      - name: Log generated files 
        run: |
          find "$GITHUB_WORKSPACE"
          
      - name: Push to GitHub pages
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          GIT_DEPLOY_DIR=dist/site \
          GIT_DEPLOY_BRANCH=gh-pages \
          GIT_DEPLOY_REPO="https://${{ github.token }}@github.com/${{ github.repository }}.git" ./deploy.sh
        working-directory: pages_repo
